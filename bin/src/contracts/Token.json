{
    "contractName": "Token",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "payable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                }
            ],
            "name": "MinterChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "minter",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "dBank",
                    "type": "address"
                }
            ],
            "name": "passMinterRole",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"MinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dBank\",\"type\":\"address\"}],\"name\":\"passMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"f:/learning/blockchain/dbank/src/contracts/Token.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"f:/learning/blockchain/dbank/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"f:/learning/blockchain/dbank/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"f:/learning/blockchain/dbank/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"f:/learning/blockchain/dbank/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"f:/learning/blockchain/dbank/src/contracts/Token.sol\":{\"keccak256\":\"0x38e43719a1a17c57b7ca40b0dff8bc17652561f09f52764678b6d2ffe6492e62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7a22668f105e9c64d5411e640cbbe5764a3c056ad9b3707c3f251d483c46d00\",\"dweb:/ipfs/QmYoR4mcgLCsjerqPzydkc535nE53WBdh9Xb8L2huhhRxM\"]}},\"version\":1}",
    "bytecode": "601b60808181527f446563656e7472616c697a65642042616e6b2043757272656e6379000000000060a0908152610100604052600360c0818152622221a160e91b60e052929361004f929061007d565b50805161006390600490602084019061007d565b5050600580546001600160a01b0319163317905550610151565b82805461008990610116565b90600052602060002090601f0160209004810192826100ab57600085556100f1565b82601f106100c457805160ff19168380011785556100f1565b828001600101855582156100f1579182015b828111156100f15782518255916020019190600101906100d6565b506100fd929150610101565b5090565b5b808211156100fd5760008155600101610102565b600181811c9082168061012a57607f821691505b6020821081141561014b57634e487b7160e01b600052602260045260246000fd5b50919050565b610b82806101606000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806340c10f191161008c578063a457c2d711610066578063a457c2d7146101e8578063a9059cbb146101fb578063d7fc5b151461020e578063dd62ed3e1461022157600080fd5b806340c10f19146101a257806370a08231146101b757806395d89b41146101e057600080fd5b806318160ddd116100c857806318160ddd1461015b57806323b872dd1461016d578063313ce56714610180578063395093511461018f57600080fd5b806306fdde03146100ef578063075461721461010d578063095ea7b314610138575b600080fd5b6100f761025a565b60405161010491906109bf565b60405180910390f35b600554610120906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b61014b610146366004610a30565b6102ec565b6040519015158152602001610104565b6002545b604051908152602001610104565b61014b61017b366004610a5a565b610302565b60405160128152602001610104565b61014b61019d366004610a30565b6103b1565b6101b56101b0366004610a30565b6103ed565b005b61015f6101c5366004610a96565b6001600160a01b031660009081526020819052604090205490565b6100f7610469565b61014b6101f6366004610a30565b610478565b61014b610209366004610a30565b610511565b61014b61021c366004610a96565b61051e565b61015f61022f366004610ab8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461026990610aeb565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610aeb565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b5050505050905090565b60006102f93384846105ed565b50600192915050565b600061030f848484610711565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103995760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103a685338584036105ed565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f99185906103e8908690610b26565b6105ed565b6005546001600160a01b0316331461045b5760405162461bcd60e51b815260206004820152602b60248201527f4572726f722c206d73672e73656e64657220646f6573206e6f7420686176652060448201526a6d696e74657220726f6c6560a81b6064820152608401610390565b61046582826108e0565b5050565b60606004805461026990610aeb565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104fa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610390565b61050733858584036105ed565b5060019392505050565b60006102f9338484610711565b6005546000906001600160a01b031633146105925760405162461bcd60e51b815260206004820152602e60248201527f4572726f722c206f6e6c79206f776e65722063616e206368616e67652070617360448201526d73206d696e6974657220726f6c6560901b6064820152608401610390565b600580546001600160a01b0319166001600160a01b03841690811790915560405190815233907f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f69060200160405180910390a2506001919050565b6001600160a01b03831661064f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610390565b6001600160a01b0382166106b05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610390565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107755760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610390565b6001600160a01b0382166107d75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610390565b6001600160a01b0383166000908152602081905260409020548181101561084f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610390565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610886908490610b26565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108d291815260200190565b60405180910390a350505050565b6001600160a01b0382166109365760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610390565b80600260008282546109489190610b26565b90915550506001600160a01b03821660009081526020819052604081208054839290610975908490610b26565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156109ec578581018301518582016040015282016109d0565b818111156109fe576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a2b57600080fd5b919050565b60008060408385031215610a4357600080fd5b610a4c83610a14565b946020939093013593505050565b600080600060608486031215610a6f57600080fd5b610a7884610a14565b9250610a8660208501610a14565b9150604084013590509250925092565b600060208284031215610aa857600080fd5b610ab182610a14565b9392505050565b60008060408385031215610acb57600080fd5b610ad483610a14565b9150610ae260208401610a14565b90509250929050565b600181811c90821680610aff57607f821691505b60208210811415610b2057634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610b4757634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122021e881b513f618581436da260485a49cc91686fe897391a7c459c86a7cf36a4664736f6c634300080a0033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c806340c10f191161008c578063a457c2d711610066578063a457c2d7146101e8578063a9059cbb146101fb578063d7fc5b151461020e578063dd62ed3e1461022157600080fd5b806340c10f19146101a257806370a08231146101b757806395d89b41146101e057600080fd5b806318160ddd116100c857806318160ddd1461015b57806323b872dd1461016d578063313ce56714610180578063395093511461018f57600080fd5b806306fdde03146100ef578063075461721461010d578063095ea7b314610138575b600080fd5b6100f761025a565b60405161010491906109bf565b60405180910390f35b600554610120906001600160a01b031681565b6040516001600160a01b039091168152602001610104565b61014b610146366004610a30565b6102ec565b6040519015158152602001610104565b6002545b604051908152602001610104565b61014b61017b366004610a5a565b610302565b60405160128152602001610104565b61014b61019d366004610a30565b6103b1565b6101b56101b0366004610a30565b6103ed565b005b61015f6101c5366004610a96565b6001600160a01b031660009081526020819052604090205490565b6100f7610469565b61014b6101f6366004610a30565b610478565b61014b610209366004610a30565b610511565b61014b61021c366004610a96565b61051e565b61015f61022f366004610ab8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461026990610aeb565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610aeb565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b5050505050905090565b60006102f93384846105ed565b50600192915050565b600061030f848484610711565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103995760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103a685338584036105ed565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102f99185906103e8908690610b26565b6105ed565b6005546001600160a01b0316331461045b5760405162461bcd60e51b815260206004820152602b60248201527f4572726f722c206d73672e73656e64657220646f6573206e6f7420686176652060448201526a6d696e74657220726f6c6560a81b6064820152608401610390565b61046582826108e0565b5050565b60606004805461026990610aeb565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104fa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610390565b61050733858584036105ed565b5060019392505050565b60006102f9338484610711565b6005546000906001600160a01b031633146105925760405162461bcd60e51b815260206004820152602e60248201527f4572726f722c206f6e6c79206f776e65722063616e206368616e67652070617360448201526d73206d696e6974657220726f6c6560901b6064820152608401610390565b600580546001600160a01b0319166001600160a01b03841690811790915560405190815233907f3b0007eb941cf645526cbb3a4fdaecda9d28ce4843167d9263b536a1f1edc0f69060200160405180910390a2506001919050565b6001600160a01b03831661064f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610390565b6001600160a01b0382166106b05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610390565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107755760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610390565b6001600160a01b0382166107d75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610390565b6001600160a01b0383166000908152602081905260409020548181101561084f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610390565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610886908490610b26565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108d291815260200190565b60405180910390a350505050565b6001600160a01b0382166109365760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610390565b80600260008282546109489190610b26565b90915550506001600160a01b03821660009081526020819052604081208054839290610975908490610b26565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156109ec578581018301518582016040015282016109d0565b818111156109fe576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a2b57600080fd5b919050565b60008060408385031215610a4357600080fd5b610a4c83610a14565b946020939093013593505050565b600080600060608486031215610a6f57600080fd5b610a7884610a14565b9250610a8660208501610a14565b9150604084013590509250925092565b600060208284031215610aa857600080fd5b610ab182610a14565b9392505050565b60008060408385031215610acb57600080fd5b610ad483610a14565b9150610ae260208401610a14565b90509250929050565b600181811c90821680610aff57607f821691505b60208210811415610b2057634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610b4757634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122021e881b513f618581436da260485a49cc91686fe897391a7c459c86a7cf36a4664736f6c634300080a0033",
    "sourceMap": "1906:113:0:-:0;169:934:4;1906:113:0;;;;;;;;;169:934:4;1906:113:0;;;;;;-1:-1:-1;;;1906:113:0;;169:934:4;;1972:13:0;;1906:113;1972:13;:::i;:::-;-1:-1:-1;1995:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;460:6:4::1;:19:::0;;-1:-1:-1;;;;;;460:19:4::1;469:10;460:19;::::0;;-1:-1:-1;169:934:4;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;169:934:4;;;-1:-1:-1;169:934:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:5;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;169:934:4;;;;;;",
    "deployedSourceMap": "169:934:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;227:21:4;;;;;-1:-1:-1;;;;;227:21:4;;;;;;-1:-1:-1;;;;;780:32:5;;;762:51;;750:2;735:18;227:21:4;616:203:5;4181:166:0;;;;;;:::i;:::-;;:::i;:::-;;;1426:14:5;;1419:22;1401:41;;1389:2;1374:18;4181:166:0;1261:187:5;3172:106:0;3259:12;;3172:106;;;1599:25:5;;;1587:2;1572:18;3172:106:0;1453:177:5;4814:478:0;;;;;;:::i;:::-;;:::i;3021:91::-;;;3103:2;2110:36:5;;2098:2;2083:18;3021:91:0;1968:184:5;5687:212:0;;;;;;:::i;:::-;;:::i;833:267:4:-;;;;;;:::i;:::-;;:::i;:::-;;3336:125:0;;;;;;:::i;:::-;-1:-1:-1;;;;;3436:18:0;3410:7;3436:18;;;;;;;;;;;;3336:125;2295:102;;;:::i;6386:405::-;;;;;;:::i;:::-;;:::i;3664:172::-;;;;;;:::i;:::-;;:::i;532:293:4:-;;;;;;:::i;:::-;;:::i;3894:149:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4009:18:0;;;3983:7;4009:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3894:149;2084:98;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;666:10:3;4303:7:0;4312:6;4280:8;:39::i;:::-;-1:-1:-1;4336:4:0;4181:166;;;;:::o;4814:478::-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;-1:-1:-1;;;;;5040:19:0;;5013:24;5040:19;;;:11;:19;;;;;;;;666:10:3;5040:33:0;;;;;;;;5091:26;;;;5083:79;;;;-1:-1:-1;;;5083:79:0;;3200:2:5;5083:79:0;;;3182:21:5;3239:2;3219:18;;;3212:30;3278:34;3258:18;;;3251:62;-1:-1:-1;;;3329:18:5;;;3322:38;3377:19;;5083:79:0;;;;;;;;;5196:57;5205:6;666:10:3;5246:6:0;5227:16;:25;5196:8;:57::i;:::-;-1:-1:-1;5281:4:0;;4814:478;-1:-1:-1;;;;4814:478:0:o;5687:212::-;666:10:3;5775:4:0;5823:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5823:34:0;;;;;;;;;;5775:4;;5791:80;;5814:7;;5823:47;;5860:10;;5823:47;:::i;:::-;5791:8;:80::i;833:267:4:-;982:6;;-1:-1:-1;;;;;982:6:4;968:10;:20;946:113;;;;-1:-1:-1;;;946:113:4;;3839:2:5;946:113:4;;;3821:21:5;3878:2;3858:18;;;3851:30;3917:34;3897:18;;;3890:62;-1:-1:-1;;;3968:18:5;;;3961:41;4019:19;;946:113:4;3637:407:5;946:113:4;1070:22;1076:7;1085:6;1070:5;:22::i;:::-;833:267;;:::o;2295:102:0:-;2351:13;2383:7;2376:14;;;;;:::i;6386:405::-;666:10:3;6479:4:0;6522:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6522:34:0;;;;;;;;;;6574:35;;;;6566:85;;;;-1:-1:-1;;;6566:85:0;;4251:2:5;6566:85:0;;;4233:21:5;4290:2;4270:18;;;4263:30;4329:34;4309:18;;;4302:62;-1:-1:-1;;;4380:18:5;;;4373:35;4425:19;;6566:85:0;4049:401:5;6566:85:0;6685:67;666:10:3;6708:7:0;6736:15;6717:16;:34;6685:8;:67::i;:::-;-1:-1:-1;6780:4:0;;6386:405;-1:-1:-1;;;6386:405:0:o;3664:172::-;3750:4;3766:42;666:10:3;3790:9:0;3801:6;3766:9;:42::i;532:293:4:-;640:6;;587:4;;-1:-1:-1;;;;;640:6:4;626:10;:20;604:116;;;;-1:-1:-1;;;604:116:4;;4657:2:5;604:116:4;;;4639:21:5;4696:2;4676:18;;;4669:30;4735:34;4715:18;;;4708:62;-1:-1:-1;;;4786:18:5;;;4779:44;4840:19;;604:116:4;4455:410:5;604:116:4;731:6;:14;;-1:-1:-1;;;;;;731:14:4;-1:-1:-1;;;;;731:14:4;;;;;;;;763:32;;762:51:5;;;777:10:4;;763:32;;750:2:5;735:18;763:32:4;;;;;;;-1:-1:-1;813:4:4;;532:293;-1:-1:-1;532:293:4:o;9962:370:0:-;-1:-1:-1;;;;;10093:19:0;;10085:68;;;;-1:-1:-1;;;10085:68:0;;5072:2:5;10085:68:0;;;5054:21:5;5111:2;5091:18;;;5084:30;5150:34;5130:18;;;5123:62;-1:-1:-1;;;5201:18:5;;;5194:34;5245:19;;10085:68:0;4870:400:5;10085:68:0;-1:-1:-1;;;;;10171:21:0;;10163:68;;;;-1:-1:-1;;;10163:68:0;;5477:2:5;10163:68:0;;;5459:21:5;5516:2;5496:18;;;5489:30;5555:34;5535:18;;;5528:62;-1:-1:-1;;;5606:18:5;;;5599:32;5648:19;;10163:68:0;5275:398:5;10163:68:0;-1:-1:-1;;;;;10242:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10293:32;;1599:25:5;;;10293:32:0;;1572:18:5;10293:32:0;;;;;;;9962:370;;;:::o;7265:713::-;-1:-1:-1;;;;;7400:20:0;;7392:70;;;;-1:-1:-1;;;7392:70:0;;5880:2:5;7392:70:0;;;5862:21:5;5919:2;5899:18;;;5892:30;5958:34;5938:18;;;5931:62;-1:-1:-1;;;6009:18:5;;;6002:35;6054:19;;7392:70:0;5678:401:5;7392:70:0;-1:-1:-1;;;;;7480:23:0;;7472:71;;;;-1:-1:-1;;;7472:71:0;;6286:2:5;7472:71:0;;;6268:21:5;6325:2;6305:18;;;6298:30;6364:34;6344:18;;;6337:62;-1:-1:-1;;;6415:18:5;;;6408:33;6458:19;;7472:71:0;6084:399:5;7472:71:0;-1:-1:-1;;;;;7636:17:0;;7612:21;7636:17;;;;;;;;;;;7671:23;;;;7663:74;;;;-1:-1:-1;;;7663:74:0;;6690:2:5;7663:74:0;;;6672:21:5;6729:2;6709:18;;;6702:30;6768:34;6748:18;;;6741:62;-1:-1:-1;;;6819:18:5;;;6812:36;6865:19;;7663:74:0;6488:402:5;7663:74:0;-1:-1:-1;;;;;7771:17:0;;;:9;:17;;;;;;;;;;;7791:22;;;7771:42;;7833:20;;;;;;;;:30;;7807:6;;7771:9;7833:30;;7807:6;;7833:30;:::i;:::-;;;;;;;;7896:9;-1:-1:-1;;;;;7879:35:0;7888:6;-1:-1:-1;;;;;7879:35:0;;7907:6;7879:35;;;;1599:25:5;;1587:2;1572:18;;1453:177;7879:35:0;;;;;;;;7382:596;7265:713;;;:::o;8254:389::-;-1:-1:-1;;;;;8337:21:0;;8329:65;;;;-1:-1:-1;;;8329:65:0;;7097:2:5;8329:65:0;;;7079:21:5;7136:2;7116:18;;;7109:30;7175:33;7155:18;;;7148:61;7226:18;;8329:65:0;6895:355:5;8329:65:0;8481:6;8465:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8497:18:0;;:9;:18;;;;;;;;;;:28;;8519:6;;8497:9;:28;;8519:6;;8497:28;:::i;:::-;;;;-1:-1:-1;;8540:37:0;;1599:25:5;;;-1:-1:-1;;;;;8540:37:0;;;8557:1;;8540:37;;1587:2:5;1572:18;8540:37:0;;;;;;;833:267:4;;:::o;14:597:5:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;824:173::-;892:20;;-1:-1:-1;;;;;941:31:5;;931:42;;921:70;;987:1;984;977:12;921:70;824:173;;;:::o;1002:254::-;1070:6;1078;1131:2;1119:9;1110:7;1106:23;1102:32;1099:52;;;1147:1;1144;1137:12;1099:52;1170:29;1189:9;1170:29;:::i;:::-;1160:39;1246:2;1231:18;;;;1218:32;;-1:-1:-1;;;1002:254:5:o;1635:328::-;1712:6;1720;1728;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;1820:29;1839:9;1820:29;:::i;:::-;1810:39;;1868:38;1902:2;1891:9;1887:18;1868:38;:::i;:::-;1858:48;;1953:2;1942:9;1938:18;1925:32;1915:42;;1635:328;;;;;:::o;2157:186::-;2216:6;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;2157:186;-1:-1:-1;;;2157:186:5:o;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:380::-;2692:1;2688:12;;;;2735;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:161;;;2909:10;2904:3;2900:20;2897:1;2890:31;2944:4;2941:1;2934:15;2972:4;2969:1;2962:15;2826:161;;2613:380;;;:::o;3407:225::-;3447:3;3478:1;3474:6;3471:1;3468:13;3465:136;;;3523:10;3518:3;3514:20;3511:1;3504:31;3558:4;3555:1;3548:15;3586:4;3583:1;3576:15;3465:136;-1:-1:-1;3617:9:5;;3407:225::o",
    "sourcePath": "f:/learning/blockchain/dbank/src/contracts/Token.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.10+commit.fc410830"
    },
    "ast": {
        "absolutePath": "f:/learning/blockchain/dbank/src/contracts/Token.sol",
        "exportedSymbols": {
            "Context": [
                670
            ],
            "ERC20": [
                545
            ],
            "IERC20": [
                623
            ],
            "IERC20Metadata": [
                648
            ],
            "Token": [
                746
            ]
        },
        "id": 747,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 672,
                "literals": [
                    "solidity",
                    ">=",
                    "0.6",
                    ".0",
                    "<",
                    "0.9",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:31:4"
            },
            {
                "absolutePath": "f:/learning/blockchain/dbank/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "f:/learning/blockchain/dbank/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 673,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 747,
                "sourceUnit": 546,
                "src": "68:97:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 674,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 545,
                            "src": "187:5:4"
                        },
                        "id": 675,
                        "nodeType": "InheritanceSpecifier",
                        "src": "187:5:4"
                    }
                ],
                "canonicalName": "Token",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 746,
                "linearizedBaseContracts": [
                    746,
                    545,
                    648,
                    623,
                    670
                ],
                "name": "Token",
                "nameLocation": "178:5:4",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "07546172",
                        "id": 677,
                        "mutability": "mutable",
                        "name": "minter",
                        "nameLocation": "242:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "227:21:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 676,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "227:7:4",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "anonymous": false,
                        "id": 683,
                        "name": "MinterChanged",
                        "nameLocation": "295:13:4",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 682,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 679,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nameLocation": "325:4:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 683,
                                    "src": "309:20:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 678,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "309:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 681,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "339:2:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 683,
                                    "src": "331:10:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 680,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "331:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "308:34:4"
                        },
                        "src": "289:54:4"
                    },
                    {
                        "body": {
                            "id": 695,
                            "nodeType": "Block",
                            "src": "417:70:4",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 693,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 690,
                                            "name": "minter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 677,
                                            "src": "460:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 691,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "469:3:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 692,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "469:10:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "460:19:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 694,
                                    "nodeType": "ExpressionStatement",
                                    "src": "460:19:4"
                                }
                            ]
                        },
                        "id": 696,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "446563656e7472616c697a65642042616e6b2043757272656e6379",
                                        "id": 686,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "379:29:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c8d615c0fb3e7b95e612a9fa472c1b7433e57dced2c37f87a3e971765e9f754a",
                                            "typeString": "literal_string \"Decentralized Bank Currency\""
                                        },
                                        "value": "Decentralized Bank Currency"
                                    },
                                    {
                                        "hexValue": "444342",
                                        "id": 687,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "410:5:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_aebc5a2b583b3cf60011aceb29026b65372e40ca0ddc4c65846d6ca7dcb76554",
                                            "typeString": "literal_string \"DCB\""
                                        },
                                        "value": "DCB"
                                    }
                                ],
                                "id": 688,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 685,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 545,
                                    "src": "373:5:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "373:43:4"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 684,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "362:2:4"
                        },
                        "returnParameters": {
                            "id": 689,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "417:0:4"
                        },
                        "scope": 746,
                        "src": "351:136:4",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 723,
                            "nodeType": "Block",
                            "src": "593:232:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 707,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 704,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "626:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 705,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "626:10:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 706,
                                                    "name": "minter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 677,
                                                    "src": "640:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "626:20:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4572726f722c206f6e6c79206f776e65722063616e206368616e67652070617373206d696e6974657220726f6c65",
                                                "id": 708,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "661:48:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_a19617c6e8249026f2eb1da5d3f16c32a07ec132b24ca9f6fa9a0252d4db6789",
                                                    "typeString": "literal_string \"Error, only owner can change pass miniter role\""
                                                },
                                                "value": "Error, only owner can change pass miniter role"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_a19617c6e8249026f2eb1da5d3f16c32a07ec132b24ca9f6fa9a0252d4db6789",
                                                    "typeString": "literal_string \"Error, only owner can change pass miniter role\""
                                                }
                                            ],
                                            "id": 703,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "604:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 709,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "604:116:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 710,
                                    "nodeType": "ExpressionStatement",
                                    "src": "604:116:4"
                                },
                                {
                                    "expression": {
                                        "id": 713,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 711,
                                            "name": "minter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 677,
                                            "src": "731:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 712,
                                            "name": "dBank",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 698,
                                            "src": "740:5:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "731:14:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 714,
                                    "nodeType": "ExpressionStatement",
                                    "src": "731:14:4"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 716,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "777:3:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 717,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "777:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 718,
                                                "name": "dBank",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 698,
                                                "src": "789:5:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 715,
                                            "name": "MinterChanged",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 683,
                                            "src": "763:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                "typeString": "function (address,address)"
                                            }
                                        },
                                        "id": 719,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "763:32:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 720,
                                    "nodeType": "EmitStatement",
                                    "src": "758:37:4"
                                },
                                {
                                    "expression": {
                                        "hexValue": "74727565",
                                        "id": 721,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "813:4:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 702,
                                    "id": 722,
                                    "nodeType": "Return",
                                    "src": "806:11:4"
                                }
                            ]
                        },
                        "functionSelector": "d7fc5b15",
                        "id": 724,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "passMinterRole",
                        "nameLocation": "541:14:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 699,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 698,
                                    "mutability": "mutable",
                                    "name": "dBank",
                                    "nameLocation": "564:5:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 724,
                                    "src": "556:13:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 697,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "556:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "555:15:4"
                        },
                        "returnParameters": {
                            "id": 702,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 701,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 724,
                                    "src": "587:4:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 700,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "587:4:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "586:6:4"
                        },
                        "scope": 746,
                        "src": "532:293:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 744,
                            "nodeType": "Block",
                            "src": "887:213:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 735,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 732,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "968:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 733,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "968:10:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 734,
                                                    "name": "minter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 677,
                                                    "src": "982:6:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "968:20:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4572726f722c206d73672e73656e64657220646f6573206e6f742068617665206d696e74657220726f6c65",
                                                "id": 736,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1003:45:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_7134362278625ef0f76080c499aa9590b53afa81cf4ce9b65ff110ee891dc0f7",
                                                    "typeString": "literal_string \"Error, msg.sender does not have minter role\""
                                                },
                                                "value": "Error, msg.sender does not have minter role"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_7134362278625ef0f76080c499aa9590b53afa81cf4ce9b65ff110ee891dc0f7",
                                                    "typeString": "literal_string \"Error, msg.sender does not have minter role\""
                                                }
                                            ],
                                            "id": 731,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "946:7:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 737,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "946:113:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 738,
                                    "nodeType": "ExpressionStatement",
                                    "src": "946:113:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 740,
                                                "name": "account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 726,
                                                "src": "1076:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 741,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 728,
                                                "src": "1085:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 739,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 405,
                                            "src": "1070:5:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 742,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1070:22:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 743,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1070:22:4"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "id": 745,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "842:4:4",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 729,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 726,
                                    "mutability": "mutable",
                                    "name": "account",
                                    "nameLocation": "855:7:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 745,
                                    "src": "847:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 725,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "847:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 728,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "872:6:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 745,
                                    "src": "864:14:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 727,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "864:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "846:33:4"
                        },
                        "returnParameters": {
                            "id": 730,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "887:0:4"
                        },
                        "scope": 746,
                        "src": "833:267:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 747,
                "src": "169:934:4",
                "usedErrors": []
            }
        ],
        "src": "33:1072:4"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "mint(address,uint256)": "40c10f19",
        "minter()": "07546172",
        "name()": "06fdde03",
        "passMinterRole(address)": "d7fc5b15",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "589200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24664",
            "balanceOf(address)": "2585",
            "decimals()": "244",
            "decreaseAllowance(address,uint256)": "26910",
            "increaseAllowance(address,uint256)": "27023",
            "mint(address,uint256)": "infinite",
            "minter()": "2383",
            "name()": "infinite",
            "passMinterRole(address)": "28284",
            "symbol()": "infinite",
            "totalSupply()": "2304",
            "transfer(address,uint256)": "51209",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}